/** (c) 2025 Antonio Carlo Autor */
"use strict";var T=Object.create;var p=Object.defineProperty,V=Object.defineProperties,C=Object.getOwnPropertyDescriptor,L=Object.getOwnPropertyDescriptors,P=Object.getOwnPropertyNames,b=Object.getOwnPropertySymbols,z=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty,D=Object.prototype.propertyIsEnumerable;var x=(e,n,t)=>n in e?p(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,h=(e,n)=>{for(var t in n||(n={}))k.call(n,t)&&x(e,t,n[t]);if(b)for(var t of b(n))D.call(n,t)&&x(e,t,n[t]);return e},f=(e,n)=>V(e,L(n));var B=(e,n)=>{for(var t in n)p(e,t,{get:n[t],enumerable:!0})},v=(e,n,t,r)=>{if(n&&typeof n=="object"||typeof n=="function")for(let o of P(n))!k.call(e,o)&&o!==t&&p(e,o,{get:()=>n[o],enumerable:!(r=C(n,o))||r.enumerable});return e};var U=(e,n,t)=>(t=e!=null?T(z(e)):{},v(n||!e||!e.__esModule?p(t,"default",{value:e,enumerable:!0}):t,e)),j=e=>v(p({},"__esModule",{value:!0}),e);var A={};B(A,{decrypt:()=>$,encrypt:()=>Z});module.exports=j(A);var i=require("crypto");var w=(e,n)=>{let t=e.safeParse(n);if(!t.success){let r={success:t.success,errors:t.error.issues.map(o=>({message:o.message,path:o.path}))};return console.dir(r,{depth:null}),r}return console.log("result",t),{success:t.success,data:t.data}};var s=U(require("zod")),S=s.default.object({algorithm:s.default.string().trim().optional(),password:s.default.string().trim().nonempty("Password is required").min(24,"Password must be minimum of 24 characters"),salt:s.default.string().trim().nonempty("salt is required").min(16,"salt must be minimum of 16 characters"),keyLength:s.default.number().optional(),ivSize:s.default.number().optional()}),q=S.extend({type:s.default.literal("encryption"),encodingInput:s.default.literal("utf8").optional(),encodingOutput:s.default.enum(["hex","base64"]).optional()}),R=S.extend({type:s.default.literal("decryption"),encodingInput:s.default.enum(["hex","base64"]).optional(),encodingOutput:s.default.literal("utf8").optional()}),O=s.default.discriminatedUnion("type",[q,R]);function Z(e,n){try{let t=f(h({},n),{type:"encryption"});if(!w(O,t).success)throw new Error("There was an error on the arguments");let o=t.algorithm||"aes-256-cbc",y=t.encodingInput||"utf8",c=t.encodingOutput||"hex",l=t.keyLength||32,g=t.ivSize||16,u=(0,i.scryptSync)(t.password,t.salt,l),a=(0,i.randomBytes)(g),d=(0,i.createCipheriv)(o,u,a),m=d.update(e,y,c);return m+=d.final(c),{message:"Encrypted successfully",iv:a.toString(c),value:m}}catch(t){let r=t instanceof Error?`Error encrypting data ${t.message}`:"Unknown error";throw console.error(r),new Error(r)}}function $(e,n,t){try{let r=f(h({},t),{type:"decryption"});if(!w(O,r).success)throw new Error("There was an error on the arguments");let y=r.algorithm||"aes-256-cbc",c=r.password,l=r.salt,g=r.keyLength||32,u=r.encodingInput||"hex",a=r.encodingOutput||"utf8",d=(0,i.scryptSync)(c,l,g),m=Buffer.from(n,u),E=(0,i.createDecipheriv)(y,d,m),I=E.update(e,u,a);return I+=E.final(a),I}catch(r){let o=r instanceof Error?`Error decrypting data. Check the salt or password: ${r.message}`:"Unknown error";throw console.error(o),new Error(o)}}0&&(module.exports={decrypt,encrypt});
//# sourceMappingURL=app.js.map