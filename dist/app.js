/** (c) 2025 Antonio Carlo Autor */
"use strict";var b=Object.create;var m=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var v=Object.getPrototypeOf,I=Object.prototype.hasOwnProperty;var C=(t,e)=>{for(var r in e)m(t,r,{get:e[r],enumerable:!0})},O=(t,e,r,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of k(e))!I.call(t,n)&&n!==r&&m(t,n,{get:()=>e[n],enumerable:!(o=x(e,n))||o.enumerable});return t};var S=(t,e,r)=>(r=t!=null?b(v(t)):{},O(e||!t||!t.__esModule?m(r,"default",{value:t,enumerable:!0}):r,t)),T=t=>O(m({},"__esModule",{value:!0}),t);var B={};C(B,{decrypt:()=>z,encrypt:()=>P});module.exports=T(B);var c=require("crypto");var g=(t,e)=>{let r=t.safeParse(e);if(!r.success){let o={success:r.success,errors:r.error.issues.map(n=>({message:n.message,path:n.path}))};return console.dir(o,{depth:null}),o}return console.log("result",r),{success:r.success,data:r.data}};var s=S(require("zod")),E=s.default.object({algorithm:s.default.string().trim().optional(),password:s.default.string().trim().nonempty("Password is required").min(24,"Password must be minimum of 24 characters"),salt:s.default.string().trim().nonempty("salt is required").min(16,"salt must be minimum of 16 characters"),keyLength:s.default.number().optional(),ivSize:s.default.number().optional()}),V=E.extend({type:s.default.literal("encryption"),encodingInput:s.default.literal("utf8").optional(),encodingOutput:s.default.enum(["hex","base64"]).optional()}),L=E.extend({type:s.default.literal("decryption"),encodingInput:s.default.enum(["hex","base64"]).optional(),encodingOutput:s.default.literal("utf8").optional()}),h=s.default.discriminatedUnion("type",[V,L]);function P(t,e){try{if(!g(h,e).success)throw new Error("There was an error on the arguments");let o=e.algorithm||"aes-256-cbc",n=e.encodingInput||"utf8",i=e.encodingOutput||"hex",l=e.keyLength||32,y=e.ivSize||16,p=(0,c.scryptSync)(e.password,e.salt,l),a=(0,c.randomBytes)(y),u=(0,c.createCipheriv)(o,p,a),d=u.update(t,n,i);return d+=u.final(i),{message:"Encrypted successfully",iv:a.toString(i),value:d}}catch(r){let o=r instanceof Error?`Error encrypting data ${r.message}`:"Unknown error";throw console.error(o),new Error(o)}}function z(t,e,r){try{if(!g(h,r).success)throw new Error("There was an error on the arguments");let n=r.algorithm||"aes-256-cbc",i=r.password,l=r.salt,y=r.keyLength||32,p=r.encodingInput||"hex",a=r.encodingOutput||"utf8",u=(0,c.scryptSync)(i,l,y),d=Buffer.from(e,p),f=(0,c.createDecipheriv)(n,u,d),w=f.update(t,p,a);return w+=f.final(a),w}catch(o){let n=o instanceof Error?`Error decrypting data. Check the salt or password: ${o.message}`:"Unknown error";throw console.error(n),new Error(n)}}0&&(module.exports={decrypt,encrypt});
//# sourceMappingURL=app.js.map