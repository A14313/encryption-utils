/** (c) 2025 Antonio Carlo Autor */
"use strict";var P=Object.create;var p=Object.defineProperty,V=Object.defineProperties,S=Object.getOwnPropertyDescriptor,C=Object.getOwnPropertyDescriptors,z=Object.getOwnPropertyNames,b=Object.getOwnPropertySymbols,D=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty,T=Object.prototype.propertyIsEnumerable;var L=(n,e,t)=>e in n?p(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,h=(n,e)=>{for(var t in e||(e={}))x.call(e,t)&&L(n,t,e[t]);if(b)for(var t of b(e))T.call(e,t)&&L(n,t,e[t]);return n},f=(n,e)=>V(n,C(e));var B=(n,e)=>{for(var t in e)p(n,t,{get:e[t],enumerable:!0})},k=(n,e,t,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of z(e))!x.call(n,s)&&s!==t&&p(n,s,{get:()=>e[s],enumerable:!(o=S(e,s))||o.enumerable});return n};var U=(n,e,t)=>(t=n!=null?P(D(n)):{},k(e||!n||!n.__esModule?p(t,"default",{value:n,enumerable:!0}):t,n)),j=n=>k(p({},"__esModule",{value:!0}),n);var F={};B(F,{decrypt:()=>A,encrypt:()=>$});module.exports=j(F);var i=require("crypto");var w=n=>{let e=n.schema.safeParse(n.payload);if(!e.success){let t={success:e.success,errors:e.error.issues.map(o=>({message:o.message,path:o.path}))};return n.includeLogs&&console.dir(t,{depth:null}),t}return n.includeLogs&&console.log("result",e),{success:e.success,data:e.data}};var r=U(require("zod")),v=r.default.object({algorithm:r.default.string().trim().optional(),password:r.default.string().trim().nonempty("Password is required").min(24,"Password must be minimum of 24 characters"),salt:r.default.string().trim().nonempty("salt is required").min(16,"salt must be minimum of 16 characters"),keyLength:r.default.number().optional(),ivSize:r.default.number().optional(),includeLogs:r.default.boolean().default(!1).optional()}),q=v.extend({type:r.default.literal("encryption"),encodingInput:r.default.literal("utf8").optional(),encodingOutput:r.default.enum(["hex","base64"]).optional()}),R=v.extend({type:r.default.literal("decryption"),encodingInput:r.default.enum(["hex","base64"]).optional(),encodingOutput:r.default.literal("utf8").optional()}),O=r.default.discriminatedUnion("type",[q,R]);function $(n,e){try{let t=f(h({},e),{type:"encryption"});if(!w({schema:O,payload:t,includeLogs:t.includeLogs}).success)throw new Error("There was an error on the arguments");let s=t.algorithm||"aes-256-cbc",m=t.encodingInput||"utf8",c=t.encodingOutput||"hex",y=t.keyLength||32,g=t.ivSize||16,u=(0,i.scryptSync)(t.password,t.salt,y),a=(0,i.randomBytes)(g),d=(0,i.createCipheriv)(s,u,a),l=d.update(n,m,c);return l+=d.final(c),{message:"Encrypted successfully",iv:a.toString(c),value:l}}catch(t){let o=t instanceof Error?`Error encrypting data ${t.message}`:"Unknown error";throw console.error(o),new Error(o)}}function A(n,e,t){try{let o=f(h({},t),{type:"decryption"});if(!w({schema:O,payload:o,includeLogs:o.includeLogs}).success)throw new Error("There was an error on the arguments");let m=o.algorithm||"aes-256-cbc",c=o.password,y=o.salt,g=o.keyLength||32,u=o.encodingInput||"hex",a=o.encodingOutput||"utf8",d=(0,i.scryptSync)(c,y,g),l=Buffer.from(e,u),I=(0,i.createDecipheriv)(m,d,l),E=I.update(n,u,a);return E+=I.final(a),E}catch(o){let s=o instanceof Error?`Error decrypting data. Check the salt or password: ${o.message}`:"Unknown error";throw console.error(s),new Error(s)}}0&&(module.exports={decrypt,encrypt});
//# sourceMappingURL=app.js.map