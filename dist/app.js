/** (c) 2025 Antonio Carlo Autor */
"use strict";var E=Object.create;var d=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var I=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var v=(t,e)=>{for(var r in e)d(t,r,{get:e[r],enumerable:!0})},O=(t,e,r,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of x(e))!k.call(t,s)&&s!==r&&d(t,s,{get:()=>e[s],enumerable:!(o=L(e,s))||o.enumerable});return t};var P=(t,e,r)=>(r=t!=null?E(I(t)):{},O(e||!t||!t.__esModule?d(r,"default",{value:t,enumerable:!0}):r,t)),C=t=>O(d({},"__esModule",{value:!0}),t);var B={};v(B,{decrypt:()=>T,encrypt:()=>z});module.exports=C(B);var a=require("crypto");var y=t=>{let e=t.schema.safeParse(t.payload);if(!e.success){let r={success:e.success,errors:e.error.issues.map(o=>({message:o.message,path:o.path}))};return t.includeLogs&&console.dir(r,{depth:null}),r}return t.includeLogs&&console.log("result",e),{success:e.success,data:e.data}};var n=P(require("zod")),b=n.default.object({algorithm:n.default.string().trim().optional(),password:n.default.string().trim().nonempty("Password is required").min(24,"Password must be minimum of 24 characters"),salt:n.default.string().trim().nonempty("salt is required").min(16,"salt must be minimum of 16 characters"),keyLength:n.default.number().optional(),ivSize:n.default.number().optional(),includeLogs:n.default.boolean().default(!1).optional()}),V=b.extend({type:n.default.literal("encryption"),encodingInput:n.default.literal("utf8").optional(),encodingOutput:n.default.enum(["hex","base64"]).optional()}),S=b.extend({type:n.default.literal("decryption"),encodingInput:n.default.enum(["hex","base64"]).optional(),encodingOutput:n.default.literal("utf8").optional()}),h=n.default.discriminatedUnion("type",[V,S]);function z(t,e){try{if(!y({schema:h,payload:e,includeLogs:e.includeLogs}).success)throw new Error("There was an error on the arguments");let o=e.algorithm||"aes-256-cbc",s=e.encodingInput||"utf8",c=e.encodingOutput||"hex",g=e.keyLength||32,m=e.ivSize||16,p=(0,a.scryptSync)(e.password,e.salt,g),i=(0,a.randomBytes)(m),u=(0,a.createCipheriv)(o,p,i),l=u.update(t,s,c);return l+=u.final(c),{message:"Encrypted successfully",iv:i.toString(c),value:l}}catch(r){let o=r instanceof Error?`Error encrypting data ${r.message}`:"Unknown error";throw console.error(o),new Error(o)}}function T(t,e,r){try{if(!y({schema:h,payload:r,includeLogs:r.includeLogs}).success)throw new Error("There was an error on the arguments");let s=r.algorithm||"aes-256-cbc",c=r.password,g=r.salt,m=r.keyLength||32,p=r.encodingInput||"hex",i=r.encodingOutput||"utf8",u=(0,a.scryptSync)(c,g,m),l=Buffer.from(e,p),f=(0,a.createDecipheriv)(s,u,l),w=f.update(t,p,i);return w+=f.final(i),w}catch(o){let s=o instanceof Error?`Error decrypting data. Check the salt or password: ${o.message}`:"Unknown error";throw console.error(s),new Error(s)}}0&&(module.exports={decrypt,encrypt});
//# sourceMappingURL=app.js.map